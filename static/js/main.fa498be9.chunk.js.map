{"version":3,"sources":["match-three/match-three.js","utility/index.js","match-three/board.js","match-three/middleware-board.js","match-three/middleware.js","match-three/useMatchThree.js","components/GameBar.js","components/useDisableZoom.js","components/GameBoardItem.js","components/GameBoardSlot.js","components/useStylesCursor.js","components/GameBoard.js","components/useSize.js","components/App.js","components/ReduxProvider.js","components/ThemeProvider.js","components/index.js","index.js"],"names":["Status","slice","state","matchThree","board","createSelector","selectors","columnCount","R","rowCount","grabbed","status","actions","setBoard","createAction","setGrabbed","setStatus","grab","drop","reducer","createReducer","undefined","action","payload","shuffle","Math","random","randomNth","distance","x","sqrt","COLORS","Object","values","Red","Blue","Yellow","Green","Purple","ItemType","ColorBomb","RadiusBomb","LineBomb","createRandomItem","id","uniqid","color","type","createRandomBoard","mergeColumns","item1","item2","mergeBoards","toColumnCount","toRowCount","toIndexes","toIndexesWhere","predicate","index","setIndex","value","clearColumnMatchings","clearRowMatchings","clearMatchings","toMatchingIndexes","item","toRadiusBombIndexes","isRadiusBomb","clearRadiusBombs","runningBoard","index1","index2","clearRadius","toColorBombIndexes","isColorBomb","clearColorBombs","clearColor","toLineBombIndexes","isLineBomb","clearColumnLineBombs","columnIndex","clearColumn","toColumnMatchingIndexes","clearRowLineBombs","rowIndex","clearRow","toRowMatchingIndexes","clear","collapse","fill","isStable","swap","isAdjacent","swapFlow","cascadeFlow","boardFlow","boardSaga","take","put","select","previous","delay","not","emptyBoard","initialBoard","fork","sagaMiddleware","createSagaMiddleware","matchThreeMiddleware","useMatchThree","useSelector","dispatch","useDispatch","bindActionCreators","GameBar","isCollapsing","AppBar","elevation","position","Toolbar","Fade","in","Box","flex","display","alignItems","justifyContent","marginRight","CircularProgress","size","Typography","variant","useDisableZoom","element","useEffect","handleClick","event","preventDefault","stopPropagation","handleTouch","touches","length","addEventListener","passive","removeEventListener","colorToMuiColor","red","yellow","blue","green","purple","useStyles","makeStyles","theme","borderRadius","spacing","width","height","background","muiColor","radiusBomb","colorBomb","border","lineBomb","DefaultItem","classes","className","RadiusBombItem","ColorBombItem","LineBombItem","Item","GameBoardItem","ref","useRef","current","div","style","zIndex","initial","scale","transformOrigin","animate","exit","toPercent","decimal","selectedVariants","notSelected","opacity","selected","hover","GameBoardSlot","props","boardHeight","boardWidth","isGrabbed","useState","isHovering","setIsHovering","styles","top","left","key","flipId","onMouseDown","onMouseEnter","onHoverStart","onHoverEnd","variants","wait","cursor","grabbing","GameBoard","cursorClassName","Boolean","useStylesCursor","setSize","useLayoutEffect","updateSize","offsetWidth","offsetHeight","window","useSize","flipKey","JSON","stringify","map","column","root","touchAction","App","Container","maxWidth","disableGutters","combineReducers","middleware","store","configureStore","run","ReduxProvider","children","createMuiTheme","palette","default","ThemeProvider","CssBaseline","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa498be9.chunk.js","sourcesContent":["import { createAction, createReducer, createSelector } from \"@reduxjs/toolkit\";\nimport * as R from \"ramda\";\n\nexport const Status = {\n  COLLAPSING: \"COLLAPSING\",\n};\n\n/* \n\n\n*/\n\nconst slice = (state) => state.matchThree;\nconst board = createSelector([slice], (slice) => slice.board);\nconst columnCount = createSelector([board], R.length);\nconst rowCount = createSelector([board], R.pipe(R.head, R.length));\nconst grabbed = createSelector([slice], (slice) => slice.grabbed);\nconst status = createSelector([slice], (slice) => slice.status);\nconst selectors = {\n  board,\n  columnCount,\n  rowCount,\n  grabbed,\n  status,\n};\n\n/*\n\n\n*/\n\nconst actions = {\n  setBoard: createAction(\"[match-three] SET_BOARD\"),\n  setGrabbed: createAction(\"[match-three] SET_GRABBED\"),\n  setStatus: createAction(\"[match-three] SET_STATUS\"),\n  //\n  grab: createAction(\"[match-three] GRAB\"),\n  drop: createAction(\"[match-three] DROP\"),\n};\n\n/* \n\n\n*/\n\nconst reducer = createReducer(\n  {\n    board: undefined,\n    grabbed: undefined,\n    status: undefined,\n  },\n  {\n    [actions.setBoard]: (state, action) => {\n      state.board = action.payload;\n    },\n    [actions.setGrabbed]: (state, action) => {\n      state.grabbed = action.payload;\n    },\n    [actions.setStatus]: (state, action) => {\n      state.status = action.payload;\n    },\n  }\n);\n\n/* \n\n\n*/\n\nexport const matchThree = {\n  reducer,\n  actions,\n  selectors,\n};\n","import * as R from \"ramda\";\nimport uniqid from \"uniqid\";\n\nexport const createId = () => uniqid();\n\nexport const shuffle = R.sortBy(Math.random);\n\nexport const randomNth = R.pipe(shuffle, R.head);\n\nexport const sqr = (x) => x * x;\n\nexport const distance = R.pipe(\n  R.zipWith(R.subtract),\n  R.map(sqr),\n  R.sum,\n  Math.sqrt\n);\n","import * as R from \"ramda\";\nimport { createId, distance, randomNth } from \"../utility\";\n\nconst MATCHING_SIZE = 3;\nconst BOMB_RADIUS = 1.5;\n\n/* \n\n\n*/\n\nexport const Colors = {\n  Red: \"red\",\n  Blue: \"blue\",\n  Yellow: \"yellow\",\n  Green: \"green\",\n  Purple: \"purple\",\n};\nexport const COLORS = Object.values(Colors);\n\nconst createRandomColor = () => {\n  return randomNth(COLORS);\n};\n\nexport const ItemType = {\n  ColorBomb: \"ColorBomb\",\n  RadiusBomb: \"RadiusBomb\",\n  LineBomb: \"LineBomb\",\n};\n\nconst createRandomItemType = () => {\n  return Math.random() <= 1 / 20 ? randomNth(R.values(ItemType)) : undefined;\n};\n\nexport const createRandomItem = () => ({\n  id: createId(),\n  color: createRandomColor(),\n  type: createRandomItemType(),\n});\n\nexport const createRandomBoard = (rowCount = 7, columnCount = 7) =>\n  R.times(() => R.times(() => createRandomItem(), columnCount), rowCount);\n\nconst mergeColumns = R.zipWith((item1, item2) =>\n  R.isNil(item1) || R.isNil(item2) ? null : item1\n);\n\nconst mergeBoards = R.zipWith(mergeColumns);\n\nconst toColumnCount = R.length;\n\nconst toRowCount = R.pipe(R.head, R.length);\n\nconst toIndexes = R.memoizeWith(\n  (board) => R.join(\", \", [toColumnCount(board), toRowCount(board)]),\n  (board) =>\n    R.xprod(R.range(0, toColumnCount(board)), R.range(0, toRowCount(board)))\n);\nconst toIndexesWhere = (predicate, board) =>\n  R.filter((index) => predicate(index, R.path(index, board)), toIndexes(board));\n\nconst setIndex = (index, value, board) =>\n  R.set(R.lensPath(index), value, board);\n\n/* \n\nclear matchings\n\n*/\n\nconst clearColumnMatchings = R.map(\n  R.pipe(\n    R.groupWith(R.eqBy(R.prop(\"color\"))),\n    R.map(\n      R.when(\n        R.pipe(R.length, R.gte(R.__, MATCHING_SIZE)),\n        R.map(R.always(null))\n      )\n    ),\n    R.unnest\n  )\n);\n\nconst clearRowMatchings = R.pipe(\n  R.transpose,\n  clearColumnMatchings,\n  R.transpose\n);\n\nconst clearMatchings = (board) =>\n  mergeBoards(clearRowMatchings(board), clearColumnMatchings(board));\n\n//\n\nconst toMatchingIndexes = (board) =>\n  toIndexesWhere((index, item) => R.isNil(item), clearMatchings(board));\n\nconst toRowMatchingIndexes = (board) =>\n  toIndexesWhere((index, item) => R.isNil(item), clearRowMatchings(board));\n\nconst toColumnMatchingIndexes = (board) =>\n  toIndexesWhere((index, item) => R.isNil(item), clearColumnMatchings(board));\n\n/* \n\nclear radius bombs\n\n*/\n\nconst isRadiusBomb = (item) => item.type === ItemType.RadiusBomb;\n\nconst toRadiusBombIndexes = (board) =>\n  toIndexesWhere((index, item) => isRadiusBomb(item), board);\n\nconst clearRadius = (index1, board) =>\n  R.reduce(\n    (board, index) => setIndex(index, null, board),\n    board,\n    toIndexesWhere((index2) => distance(index1, index2) <= BOMB_RADIUS, board)\n  );\n\nconst clearRadiusBombs = (board) =>\n  R.reduce(\n    (runningBoard, index) => clearRadius(index, runningBoard),\n    board,\n    R.intersection(toMatchingIndexes(board), toRadiusBombIndexes(board))\n  );\n\n/* \n\nclear same color bombs\n\n*/\n\nconst isColorBomb = (item) => item.type === ItemType.ColorBomb;\n\nconst toColorBombIndexes = (board) =>\n  toIndexesWhere((index, item) => isColorBomb(item), board);\n\nconst clearColor = (color, board) =>\n  R.map(R.map(R.when((item) => item?.color === color, R.always(null))), board);\n\nconst clearColorBombs = (board) =>\n  R.reduce(\n    (runningBoard, index) =>\n      clearColor(R.path(index, board).color, runningBoard),\n    board,\n    R.intersection(toMatchingIndexes(board), toColorBombIndexes(board))\n  );\n\n/* \n\nclear line bombs\n\n*/\n\nconst isLineBomb = (item) => item.type === ItemType.LineBomb;\n\nconst toLineBombIndexes = (board) =>\n  toIndexesWhere((index, item) => isLineBomb(item), board);\n\n//\n\nconst clearColumn = (columnIndex, board) =>\n  R.reduce(\n    (runningBoard, index) => setIndex(index, null, runningBoard),\n    board,\n    toIndexesWhere((index) => index[0] === columnIndex, board)\n  );\n\nconst clearColumnLineBombs = (board) =>\n  R.reduce(\n    (runningBoard, index) => clearColumn(index[0], runningBoard),\n    board,\n    R.intersection(toColumnMatchingIndexes(board), toLineBombIndexes(board))\n  );\n\n//\n\nconst clearRow = (rowIndex, board) =>\n  R.reduce(\n    (runningBoard, index) => setIndex(index, null, runningBoard),\n    board,\n    toIndexesWhere((index) => index[1] === rowIndex, board)\n  );\n\nconst clearRowLineBombs = (board) =>\n  R.reduce(\n    (runningBoard, index) => clearRow(index[1], runningBoard),\n    board,\n    R.intersection(toRowMatchingIndexes(board), toLineBombIndexes(board))\n  );\n\n/* \n\nclear board\n\n*/\n\nexport const clear = (board) =>\n  R.reduce(mergeBoards, board, [\n    clearMatchings(board),\n    clearRadiusBombs(board),\n    clearColorBombs(board),\n    clearColumnLineBombs(board),\n    clearRowLineBombs(board),\n  ]);\n\n/* \n\n\n*/\n\nexport const collapse = R.map(R.sort(R.descend(R.isNil)));\n\n/* \n\n\n*/\n\nexport const fill = R.map(R.map(R.when(R.isNil, createRandomItem)));\n\n/* \n\n\n*/\n\nexport const isStable = R.converge(R.equals, [R.identity, clear]);\n\n/* \n\n\n*/\n\nexport const swap = R.curry((index1, index2, board) =>\n  R.pipe(\n    R.assocPath(index1, R.path(index2, board)),\n    R.assocPath(index2, R.path(index1, board))\n  )(board)\n);\n\n/* \n\n\n*/\n\nexport const isAdjacent = R.pipe(distance, R.equals(1));\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { not } from \"ramda\";\nimport { delay, fork, put, select, take } from \"redux-saga/effects\";\nimport {\n  clear,\n  collapse,\n  createRandomBoard,\n  fill,\n  isAdjacent,\n  isStable,\n  swap,\n} from \"./board\";\nimport { matchThree, Status } from \"./match-three\";\n\nexport const animationActions = {\n  started: createAction(\"[animation] STARTED\"),\n  completed: createAction(\"[animation] COMPLETED\"),\n};\n\nconst { actions, selectors } = matchThree;\nconst { setStatus, setBoard, setGrabbed, grab, drop } = actions;\nconst { board } = selectors;\n\nfunction* swapFlow() {\n  const { payload: index1 } = yield take(grab);\n\n  yield put(setGrabbed(index1));\n\n  const { payload: index2 } = yield take(drop);\n\n  yield put(setGrabbed(undefined));\n\n  if (isAdjacent(index1, index2)) {\n    const previous = yield select(board);\n\n    yield put(setBoard(swap(index1, index2, yield select(board))));\n\n    if (isStable(yield select(board))) {\n      yield delay(1000 / 2);\n\n      yield put(setBoard(previous));\n    }\n  }\n}\n\nfunction* cascadeFlow() {\n  yield put(setStatus(Status.COLLAPSING));\n\n  while (not(isStable(yield select(board)))) {\n    yield delay(1000 / 3);\n\n    yield put(setBoard(clear(yield select(board))));\n\n    yield delay(1000 / 3);\n\n    yield put(setBoard(collapse(yield select(board))));\n\n    yield delay(1000 / 3);\n\n    yield put(setBoard(fill(yield select(board))));\n  }\n\n  yield put(setStatus(undefined));\n}\n\nfunction* boardFlow() {\n  while (true) {\n    yield* cascadeFlow();\n\n    yield* swapFlow();\n  }\n}\n\nexport function* boardSaga() {\n  const emptyBoard = [[]];\n\n  yield put(setBoard(emptyBoard));\n\n  yield delay(500);\n\n  const initialBoard = createRandomBoard();\n\n  yield put(setBoard(initialBoard));\n\n  yield fork(boardFlow);\n}\n","import createSagaMiddleware from \"redux-saga\";\nimport { boardSaga } from \"./middleware-board\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const matchThreeMiddleware = [sagaMiddleware];\n\nexport const startMatchThreeMiddleware = () => {\n  sagaMiddleware.run(boardSaga);\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { matchThree } from \"./match-three\";\n\nconst { selectors, actions } = matchThree;\n\nexport const useMatchThree = () => {\n  const rowCount = useSelector(selectors.rowCount);\n\n  const columnCount = useSelector(selectors.columnCount);\n\n  const board = useSelector(selectors.board);\n\n  const grabbed = useSelector(selectors.grabbed);\n\n  const status = useSelector(selectors.status);\n\n  const dispatch = useDispatch();\n\n  return {\n    ...bindActionCreators(actions, dispatch),\n    rowCount,\n    columnCount,\n    board,\n    grabbed,\n    status,\n  };\n};\n","import {\n  Box,\n  CircularProgress,\n  Fade,\n  Typography,\n  AppBar,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Status } from \"../match-three\";\nimport { useMatchThree } from \"../match-three/useMatchThree\";\n\nexport const GameBar = () => {\n  const { status } = useMatchThree();\n\n  const isCollapsing = status === Status.COLLAPSING;\n\n  return (\n    <AppBar color=\"transparent\" elevation={0} position=\"sticky\">\n      <Toolbar>\n        <Fade in={isCollapsing}>\n          <Box\n            flex={1}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Box marginRight={1} color=\"text.secondary\">\n              <CircularProgress size=\"1em\" color=\"inherit\" />\n            </Box>\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n              Collapsing...\n            </Typography>\n          </Box>\n        </Fade>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","//SOURCE: https://stackoverflow.com/questions/56024398/disable-double-tap-zoom-resize-on-safari-ios12\n\nimport { useEffect } from \"react\";\n\nexport const useDisableZoom = (element) => {\n  useEffect(() => {\n    if (!element) {\n      return;\n    }\n\n    const handleClick = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    const handleTouch = (event) => {\n      if (event.touches.length > 1) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n\n    element.addEventListener(\"click\", handleClick);\n    element.addEventListener(\"touchstart\", handleTouch, {\n      passive: false,\n    });\n    return () => {\n      element.removeEventListener(\"click\", handleClick);\n      element.removeEventListener(\"touchstart\", handleTouch);\n    };\n  }, [element]);\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport { blue, green, purple, red, yellow } from \"@material-ui/core/colors\";\nimport { motion } from \"framer-motion\";\nimport React, { useRef } from \"react\";\nimport { ItemType } from \"../match-three/board\";\nimport { useDisableZoom } from \"./useDisableZoom\";\n\nconst muiColorToGradient = (muiColor) =>\n  `radial-gradient(${muiColor[400]}, ${muiColor[900]})`;\n\nconst muiColotToBombGradient = (muiColor) =>\n  `repeating-linear-gradient(${muiColor[400]}, ${muiColor[900]})`;\n\nconst colorToMuiColor = (color) =>\n  ({\n    red,\n    yellow,\n    blue,\n    green,\n    purple,\n  }[color]);\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    borderRadius: theme.spacing(1),\n    width: \"100%\",\n    height: \"100%\",\n    background: ({ color }) => muiColorToGradient(colorToMuiColor(color)),\n  },\n\n  radiusBomb: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: \"50%\",\n    background: ({ color }) => muiColotToBombGradient(colorToMuiColor(color)),\n  },\n\n  colorBomb: {\n    width: \"100%\",\n    height: \"100%\",\n    background: \"transparent\",\n    borderRadius: \"50%\",\n    border: ({ color }) =>\n      `${theme.spacing(1)}px solid ${colorToMuiColor(color)[600]}`,\n  },\n\n  lineBomb: {\n    borderRadius: theme.spacing(1),\n    width: \"100%\",\n    height: \"100%\",\n    background: \"transparent\",\n\n    border: ({ color }) =>\n      `${theme.spacing(1)}px solid ${colorToMuiColor(color)[600]}`,\n  },\n}));\n\nconst DefaultItem = ({ item }) => {\n  const classes = useStyles({ color: item.color });\n\n  return <div className={classes.item} />;\n};\n\nconst RadiusBombItem = ({ item }) => {\n  const classes = useStyles({ color: item.color });\n\n  return <div className={classes.radiusBomb} />;\n};\n\nconst ColorBombItem = ({ item }) => {\n  const classes = useStyles({ color: item.color });\n\n  return <div className={classes.colorBomb} />;\n};\n\nconst LineBombItem = ({ item }) => {\n  const classes = useStyles({ color: item.color });\n\n  return <div className={classes.lineBomb} />;\n};\n\nexport const Item = ({ item }) => {\n  switch (item.type) {\n    case ItemType.LineBomb:\n      return <LineBombItem item={item} />;\n    case ItemType.RadiusBomb:\n      return <RadiusBombItem item={item} />;\n    case ItemType.ColorBomb:\n      return <ColorBombItem item={item} />;\n    default:\n      return <DefaultItem item={item} />;\n  }\n};\n\nexport const GameBoardItem = ({ item }) => {\n  const ref = useRef();\n\n  useDisableZoom(ref.current);\n\n  return (\n    <motion.div\n      style={{ zIndex: 100, width: \"100%\", height: \"100%\" }}\n      ref={ref}\n      initial={{\n        scale: 0,\n        transformOrigin: \"center\",\n      }}\n      animate={{\n        scale: 0.85,\n        transformOrigin: \"center\",\n      }}\n      exit={{\n        transformOrigin: \"center\",\n        scale: 0,\n      }}\n    >\n      <Item item={item} />\n    </motion.div>\n  );\n};\n","import { Box } from \"@material-ui/core\";\nimport { motion } from \"framer-motion\";\nimport * as R from \"ramda\";\nimport React, { useState } from \"react\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport { Status } from \"../match-three\";\nimport { useMatchThree } from \"../match-three/useMatchThree\";\nimport { GameBoardItem } from \"./GameBoardItem\";\n\nconst toPercent = (decimal) => `${decimal * 100}%`;\n\nconst selectedVariants = {\n  notSelected: {\n    scale: 1,\n    opacity: 1,\n  },\n  selected: {\n    scale: 1 + 1 / 3,\n    opacity: 3 / 4,\n  },\n  hover: {\n    scale: 0.9,\n    opacity: 0.9,\n  },\n};\n\nexport const GameBoardSlot = (props) => {\n  const { rowIndex, columnIndex, boardHeight, boardWidth, item } = props;\n\n  const {\n    grabbed,\n    columnCount,\n    rowCount,\n    grab,\n    drop,\n    status,\n  } = useMatchThree();\n  const isCollapsing = status === Status.COLLAPSING;\n  const isGrabbed = R.equals(grabbed, [columnIndex, rowIndex]);\n  const [isHovering, setIsHovering] = useState(false);\n\n  const variant = isCollapsing\n    ? \"notSelected\"\n    : isGrabbed\n    ? \"selected\"\n    : isHovering\n    ? \"hover\"\n    : \"notSelected\";\n\n  const handleGrab = () => {\n    if (isGrabbed) {\n      drop([columnIndex, rowIndex]);\n    } else {\n      grab([columnIndex, rowIndex]);\n    }\n  };\n\n  const handleDrop = () => {\n    if (grabbed) {\n      drop([columnIndex, rowIndex]);\n    }\n  };\n\n  const styles = {\n    position: \"absolute\",\n    top: toPercent(rowIndex / rowCount),\n    left: toPercent(columnIndex / columnCount),\n    width: boardWidth / columnCount,\n    height: boardHeight / rowCount,\n    zIndex: isGrabbed ? 2 : 1,\n  };\n\n  return (\n    <Flipped key={item.id} flipId={item.id}>\n      <Box style={styles} onMouseDown={handleGrab} onMouseEnter={handleDrop}>\n        <motion.div\n          onHoverStart={() => {\n            setIsHovering(true);\n          }}\n          onHoverEnd={() => {\n            setIsHovering(false);\n          }}\n          style={{ width: \"100%\", height: \"100%\" }}\n          variants={selectedVariants}\n          initial=\"notSelected\"\n          animate={variant}\n        >\n          <GameBoardItem item={item} />\n        </motion.div>\n      </Box>\n    </Flipped>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport { Status } from \"../match-three\";\nimport { useMatchThree } from \"../match-three/useMatchThree\";\n\nconst useStyles = makeStyles((theme) => ({\n  wait: {\n    cursor: \"wait\",\n  },\n  grab: {\n    cursor: \"grab\",\n  },\n  grabbing: {\n    cursor: \"grabbing\",\n  },\n}));\n\nexport const useStylesCursor = () => {\n  const classes = useStyles();\n  const { status, grabbed } = useMatchThree();\n  const isCollapsing = status === Status.COLLAPSING;\n  const isGrabbed = Boolean(grabbed);\n\n  if (isCollapsing) {\n    return classes.wait;\n  }\n\n  if (isGrabbed) {\n    return classes.grabbing;\n  }\n\n  return classes.grab;\n};\n","import { Box } from \"@material-ui/core\";\nimport { AnimatePresence } from \"framer-motion\";\nimport React, { useRef } from \"react\";\nimport { Flipper } from \"react-flip-toolkit\";\nimport { useMatchThree } from \"../match-three/useMatchThree\";\nimport { GameBoardSlot } from \"./GameBoardSlot\";\nimport { useSize } from \"./useSize\";\nimport { useStylesCursor } from \"./useStylesCursor\";\n\nexport const GameBoard = () => {\n  const matchThree = useMatchThree();\n  const cursorClassName = useStylesCursor();\n  const { board, columnCount, rowCount } = matchThree;\n\n  const ref = useRef();\n  const [boardWidth] = useSize(ref);\n  const boardHeight = (boardWidth / columnCount) * rowCount;\n\n  const flipKey = JSON.stringify(board);\n\n  return (\n    <Box\n      className={cursorClassName}\n      ref={ref}\n      width=\"100%\"\n      height={boardHeight}\n      position=\"relative\"\n    >\n      <Flipper flipKey={flipKey}>\n        <AnimatePresence>\n          {board.map((column, columnIndex) =>\n            column.map((item, rowIndex) =>\n              item ? (\n                <GameBoardSlot\n                  key={item.id}\n                  rowIndex={rowIndex}\n                  columnIndex={columnIndex}\n                  item={item}\n                  boardHeight={boardHeight}\n                  boardWidth={boardWidth}\n                />\n              ) : null\n            )\n          )}\n        </AnimatePresence>\n      </Flipper>\n    </Box>\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\n\nexport const useSize = (ref) => {\n  const [size, setSize] = useState([0, 0]);\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      const updateSize = () => {\n        setSize([ref.current.offsetWidth, ref.current.offsetHeight]);\n      };\n\n      window.addEventListener(\"resize\", updateSize);\n\n      updateSize();\n\n      return () => {\n        window.removeEventListener(\"resize\", updateSize);\n      };\n    }\n  }, [ref]);\n\n  return size;\n};\n","import { Container, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport { GameBar } from \"./GameBar\";\nimport { GameBoard } from \"./GameBoard\";\nimport { useDisableZoom } from \"./useDisableZoom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    touchAction: \"none\",\n  },\n}));\n\nexport const App = () => {\n  const classes = useStyles();\n\n  useDisableZoom();\n\n  return (\n    <Container maxWidth=\"xs\" disableGutters className={classes.root}>\n      <GameBar />\n      <GameBoard />\n    </Container>\n  );\n};\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport {\n  matchThree,\n  matchThreeMiddleware,\n  startMatchThreeMiddleware,\n} from \"../match-three\";\n\nconst reducer = combineReducers({\n  matchThree: matchThree.reducer,\n});\n\nconst middleware = [...matchThreeMiddleware];\n\nconst store = configureStore({\n  reducer,\n  middleware,\n});\n\nstartMatchThreeMiddleware();\n\nexport const ReduxProvider = ({ children }) => {\n  return <Provider store={store}>{children}</Provider>;\n};\n","import {\n  createMuiTheme,\n  CssBaseline,\n  MuiThemeProvider,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    background: {\n      default: \"#101010\",\n    },\n  },\n});\n\nexport const ThemeProvider = ({ children }) => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </MuiThemeProvider>\n  );\n};\n","import React from \"react\";\nimport { App } from \"./App\";\nimport { ReduxProvider } from \"./ReduxProvider\";\nimport { ThemeProvider } from \"./ThemeProvider\";\n\nexport const Root = () => {\n  return (\n    <ReduxProvider>\n      <ThemeProvider>\n        <App />\n      </ThemeProvider>\n    </ReduxProvider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Root } from \"./components\";\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}